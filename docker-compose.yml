services:
  # API Service - handles REST API requests
  videogrinder-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
      - air-tmp:/app/tmp
    environment:
      - ENV=development
      - DEBUG=true
      - AWS_REGION=us-east-1
      - PROCESSOR_URL=http://videogrinder-processor-dev:8082
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-processor-dev
    profiles:
      - dev
    command: ["air", "-c", ".air-api.toml"]

  # Processor Service - handles video processing
  videogrinder-processor-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8082:8082"
    volumes:
      - .:/app
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
      - air-tmp:/app/tmp
    environment:
      - ENV=development
      - DEBUG=true
      - AWS_REGION=us-east-1
      - PORT=8082
    networks:
      - videogrinder-network
    profiles:
      - dev
    command: ["air", "-c", ".air-processor.toml"]

  # Production API Service
  videogrinder-api-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    volumes:
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
    environment:
      - ENV=production
      - AWS_REGION=us-east-1
      - PROCESSOR_URL=http://videogrinder-processor-prod:8082
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-processor-prod
    profiles:
      - prod
    command: ["./cmd/api/main"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production Processor Service
  videogrinder-processor-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8082:8082"
    volumes:
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
    environment:
      - ENV=production
      - AWS_REGION=us-east-1
      - PORT=8082
    networks:
      - videogrinder-network
    profiles:
      - prod
    command: ["./cmd/processor/main"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development tools
  videogrinder-devtools:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GOPROXY=direct
      - GOSUMDB=off
      - CGO_ENABLED=0
    command: ["sh", "-c", "GOFLAGS='-buildvcs=false' golangci-lint run"]
    networks:
      - videogrinder-network
    profiles:
      - tools

volumes:
  videogrinder-uploads:
    driver: local
  videogrinder-outputs:
    driver: local
  videogrinder-temp:
    driver: local
  air-tmp:
    driver: local

networks:
  videogrinder-network:
    driver: bridge
