name: 🔍 VideoGrinder CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  quality-checks:
    name: 🔍 Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔧 Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: 📁 Create required directories
      run: |
        mkdir -p uploads outputs temp tmp

    - name: 🎨 Run code formatting
      run: make fmt

    - name: 🔍 Run linting (Go + JS)
      run: make lint

    - name: 🧪 Run unit tests (Go)
      run: make test

    - name: 🧪 Run unit tests (JS)
      run: make test-unit

  build-test:
    name: 🏗️ Build & Production Test
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔧 Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: 📁 Create required directories
      run: |
        mkdir -p uploads outputs temp tmp

    - name: 🏗️ Build production image
      run: make setup prod

    - name: 🧪 Test production image startup
      run: |
        echo "🚀 Testing production image startup..."
        timeout 30s make run prod || true
        docker-compose logs videogrinder-prod
        docker-compose down

  e2e-tests:
    name: 🎭 End-to-End Tests
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔧 Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: 📁 Create required directories
      run: |
        mkdir -p uploads outputs temp tmp

    - name: 🚀 Start application
      run: |
        make setup dev
        make run dev &

    - name: ⏳ Wait for application to be ready
      run: |
        echo "Waiting for application to start..."
        timeout 60s bash -c 'until curl -f http://localhost:8080/api/status; do sleep 2; done'
        echo "Application is ready!"

    - name: 🎭 Run E2E tests
      run: make test-e2e

    - name: 📸 Upload Cypress screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-screenshots
        path: cypress/screenshots
        retention-days: 30

    - name: 🎥 Upload Cypress videos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-videos
        path: cypress/videos
        retention-days: 30

    - name: 📋 Show logs on failure
      if: failure()
      run: |
        echo "=== Application Logs ==="
        make logs dev || docker-compose logs

    - name: 🧹 Cleanup
      if: always()
      run: make down
