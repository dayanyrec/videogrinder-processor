services:
  # Web Service - serves the frontend
  videogrinder-web-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - air-tmp:/app/tmp
    environment:
      - ENV=development
      - DEBUG=true
      - AWS_REGION=us-east-1
      - PORT=8080
      - API_URL=http://videogrinder-api-dev:8081
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-api-dev
    profiles:
      - dev
    command: ["air", "-c", ".air-web.toml"]


  # API Service - handles REST API requests
  videogrinder-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8081:8081"
    volumes:
      - .:/app
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
      - air-tmp:/app/tmp
    environment:
      - ENV=development
      - DEBUG=true
      - AWS_REGION=us-east-1
      - PORT=8081
      - PROCESSOR_URL=http://videogrinder-processor-dev:8082
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-processor-dev
    profiles:
      - dev
    command: ["air", "-c", ".air-api.toml"]

  # Processor Service - handles video processing
  videogrinder-processor-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8082:8082"
    volumes:
      - .:/app
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
      - air-tmp:/app/tmp
    environment:
      - ENV=development
      - DEBUG=true
      - AWS_REGION=us-east-1
      - PORT=8082
    networks:
      - videogrinder-network
    profiles:
      - dev
    command: ["air", "-c", ".air-processor.toml"]

  # Production Web Service
  videogrinder-web-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - AWS_REGION=us-east-1
      - PORT=8080
      - API_URL=http://videogrinder-api-prod:8081
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-api-prod
    profiles:
      - prod
    command: ["./web/cmd/main"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production API Service
  videogrinder-api-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8081:8081"
    volumes:
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
    environment:
      - ENV=production
      - AWS_REGION=us-east-1
      - PORT=8081
      - PROCESSOR_URL=http://videogrinder-processor-prod:8082
    networks:
      - videogrinder-network
    depends_on:
      - videogrinder-processor-prod
    profiles:
      - prod
    command: ["./api/cmd/main"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production Processor Service
  videogrinder-processor-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8082:8082"
    volumes:
      - videogrinder-uploads:/app/uploads
      - videogrinder-outputs:/app/outputs
      - videogrinder-temp:/app/temp
    environment:
      - ENV=production
      - AWS_REGION=us-east-1
      - PORT=8082
    networks:
      - videogrinder-network
    profiles:
      - prod
    command: ["./processor/cmd/main"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  videogrinder-uploads:
    driver: local
  videogrinder-outputs:
    driver: local
  videogrinder-temp:
    driver: local
  air-tmp:
    driver: local

networks:
  videogrinder-network:
    driver: bridge
