name: 🔍 VideoGrinder CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  quality-checks:
    name: 🔍 Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔧 Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: 📁 Create required directories
      run: mkdir -p uploads outputs temp tmp

    - name: ✨ Step 1 - Check Code Formatting
      run: |
        echo "🎨 Checking code formatting..."
        make fmt-check

    - name: 🔍 Step 2 - Check Code Quality (Lint)
      run: |
        echo "🔍 Running linters..."
        make lint

    - name: 🧪 Step 3 - Run Unit Tests
      run: |
        echo "🧪 Running unit tests..."
        make test
        make test-js

  build-and-health:
    name: 🏗️ Build & Health Check
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔧 Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: 📁 Create required directories
      run: mkdir -p uploads outputs temp tmp

    - name: 🏗️ Step 4 - Build Production Images
      run: |
        echo "🏗️ Building all 3 services (Web + API + Processor)..."
        make setup prod

    - name: 🚀 Step 5 - Health Check Services
      run: |
        echo "🚀 Starting all services..."
        make run prod &

        echo "⏳ Waiting for services to be ready..."
        timeout 60s bash -c 'until make health; do sleep 2; done'

        echo "✅ All services are healthy!"
        echo "📋 Showing service logs..."
        make logs prod

        echo "🧹 Cleaning up..."
        make down prod
