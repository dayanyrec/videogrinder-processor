name: 🔍 Pull Request Validation

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  validation:
    name: 🔍 PR Validation (6 Steps)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔧 Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.37.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: 📁 Create required directories
        run: mkdir -p uploads outputs temp tmp

      - name: ✨ Step 1 - Check Code Formatting
        run: |
          echo "🎨 Checking code formatting..."
          make fmt-check

      - name: 🔍 Step 2 - Check Code Quality (Lint)
        run: |
          echo "🔍 Running linters..."
          make lint

      - name: 🧪 Step 3 - Run Unit Tests
        run: |
          echo "🧪 Running unit tests..."
          make test
          make test-js

      - name: 🏗️ Step 4 - Build Production Images
        run: |
          echo "🏗️ Building all 3 services (Web + API + Processor)..."
          make setup prod

      - name: 🚀 Step 5 - Health Check Services
        run: |
          echo "🧹 Cleaning up any existing containers..."
          make down all

          echo "🚀 Starting services for health check..."
          make run prod &
          sleep 5

          echo "🔍 Running health checks..."
          if ! timeout 60s bash -c 'until make health; do sleep 2; done'; then
            echo "❌ Health check failed. Showing service logs..."
            make logs-tail prod
            make down all
            exit 1
          fi

          echo "✅ Health check passed!"

      - name: 🎭 Step 6 - Run E2E Tests
        run: |
          echo "🎭 Running E2E tests..."
          echo "⚠️  Services are running from Step 5"

          # Wait a bit more to ensure services are fully ready
          sleep 10

          # Install Node.js dependencies and run E2E tests directly on runner
          cd web
          npm ci
          npm run test:e2e

          echo "✅ E2E tests completed!"
          echo "🧹 Cleaning up containers..."
          make down all

  pr-summary:
    name: 📋 PR Summary
    runs-on: ubuntu-latest
    needs: validation
    if: always()

    steps:
      - name: 📊 Validation Summary
        run: |
          echo "## 🔍 Pull Request Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.validation.result }}" = "success" ]; then
            echo "✅ **All 6 Steps**: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 1: Code formatting ✅" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 2: Linting (Go + JS) ✅" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 3: Unit tests ✅" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 4: Production build ✅" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 5: Health check ✅" >> $GITHUB_STEP_SUMMARY
            echo "  - Step 6: E2E tests ✅" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 **Ready for merge**: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Validation**: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🚀 **Ready for merge**: ❌" >> $GITHUB_STEP_SUMMARY
          fi
